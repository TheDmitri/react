{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Car","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","Card","SearchBox","searchChange","input","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZH,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCcGK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIXC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OAAQ,cAACC,EAAD,CAENV,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMT,OACE,8BACGH,KCFQK,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,kCACVY,MAAM,SACNC,YAAY,gBACZC,SAAUH,OCgBHI,E,kDAtBb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHI,E,qDAOlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAGG,KAAKJ,MAAMC,SACL,0DAEFG,KAAKL,MAAMO,a,GAhBKC,aC2CZC,G,wDArCb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAACM,YAAaD,EAAME,OAAOC,SAbzC,EAAKb,MAAQ,CACXb,OAAQ,GACRwB,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBG,MAAM,8CACLzC,MAAK,SAAA0C,GAAa,OAAOA,EAASC,UAClC3C,MAAK,SAAA4C,GAAU,EAAKZ,SAAS,CAAClB,OAAQ8B,S,oBAOzC,WACE,MAA8Bb,KAAKJ,MAA5Bb,EAAP,EAAOA,OAAQwB,EAAf,EAAeA,YACTO,EAAiB/B,EAAOgC,QAAO,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAASX,EAAYU,kBAEvD,OAAQlC,EAAOoC,OAGZ,sBAAKxC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcU,KAAKK,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtB,OAAQ+B,SANtB,oBAAInC,UAAU,KAAd,yB,GAzBYwB,cCClBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.5d23fc56.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Car = ({name, email, id}) => {\r\n  return(\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Car;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n  /*if(true){\r\n    throw new Error('NOOOOO!');\r\n  }*/\r\n  const cardComponent = robots.map((user, i) => {\r\n    return (<Card\r\n      key={i}\r\n      id={robots[i].id}\r\n      name={robots[i].name}\r\n      email={robots[i].email}/>\r\n    );\r\n  })\r\n  return(\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return(\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--greenbg-lightest-blue'\r\n        input='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false  \r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info){\r\n    this.setState({ hasError: true})\r\n  }\r\n\r\n  render(){\r\n    if(this.state.hasError){\r\n      return <h1>Oooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ErrorBoundry;\r\n","import React,  {Component} from 'react';\r\nimport CardList from '../components/CardList.js'\r\nimport SearchBox from '../components/SearchBox.js'\r\nimport ErrorBoundry from '../components/ErrorBoundry.js'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => {return response.json();})\r\n    .then(users => {this.setState({robots: users})});\r\n  }\r\n\r\n  onSearchChange = (event) =>{\r\n    this.setState({searchfield: event.target.value})\r\n  }\r\n\r\n  render(){\r\n    const {robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1 className='tc'>Loading</h1>:\r\n      (\r\n       <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <ErrorBoundry>\r\n          <CardList robots={filteredRobots}/>\r\n        < /ErrorBoundry>\r\n       </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App.js'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}